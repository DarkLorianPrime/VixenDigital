version: "3.10"
x-postgres-environment: &x-postgres-environment
  POSTGRES_USER: ${POSTGRES_USER}
  POSTGRES_HOST: ${POSTGRES_HOST}
  POSTGRES_NAME: ${POSTGRES_NAME}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

x-elastic-environment: &x-elastic-environment
  ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
  ES_PORT: ${ELASTIC_PORT}
  ELASTIC_PORT: ${ELASTIC_PORT}
  ELASTIC_USER: ${ELASTIC_USER}
  ELASTIC_HOST: ${ELASTIC_HOST}
  KIBANA_SYSTEM_PASSWORD: ${KIBANA_PASSWORD}

x-minio-environment: &x-minio-environment
  MINIO_ROOT_USER: ${MINIO_USER}
  MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD}
  MINIO_ROOT_HOST: ${MINIO_HOST}
  MINIO_ROOT_PORT: ${MINIO_PORT}

x-rabbitmq-environment: &x-rabbitmq-environment
  RABBITMQ_USERNAME: ${RABBIT_USER}
  RABBITMQ_PASSWORD: ${RABBIT_PASSWORD}

services:
  nginx:
    image: nginx:latest
    depends_on:
      - backend
      - database
      - elk
      - minio
    volumes:
      - "./nginx.conf:/etc/nginx/nginx.conf:ro"
    ports:
      - ${NGINX_PORT}:80

  database:
    image: postgres:alpine
    restart: always
    environment:
      <<: *x-postgres-environment
    volumes:
      - pgdata:/var/lib/postgresql/data

  minio:
    image: minio/minio
    restart: always
    volumes:
      - miniodata:/data
    environment:
      <<: *x-minio-environment
    command: server /data --console-address ":9001"

  elk:
    image: elasticsearch:8.8.1
    restart: always
    volumes:
      - esdata:/usr/share/elasticsearch/data
    environment:
      xpack.security.enabled: "false"
      <<: *x-elastic-environment
      transport.host: "localhost"

  kibana:
    image: kibana:8.8.1
    restart: always
    depends_on:
      - elk
    volumes:
      - kibanadata:/usr/share/kibana/config/
    environment:
      XPACK_SECURITY_ENABLED: "false"
      <<: *x-elastic-environment
      ELASTICSEARCH_HOSTS: '["http://elk:9200/"]'

  rabbitmq:
    image: bitnami/rabbitmq:latest
    volumes:
      - rabbitmqdata:/bitnami/rabbitmq/mnesia
    environment:
      <<: *x-rabbitmq-environment

  backend:
    build: backend
    restart: always
    depends_on:
      - database
      - elk
      - minio
      - rabbitmq
    volumes:
      - "./backend/app/:/application"
    environment:
      <<: [ *x-postgres-environment, *x-elastic-environment, *x-minio-environment ]
      SECURITY_TOKEN: ${SECURITY_TOKEN}
      PYTHONUNBUFFERED: 1

volumes:
  pgdata:
  esdata:
  miniodata:
  kibanadata:
  rabbitmqdata: